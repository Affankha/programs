7. various memory allocation (first fit, best fit, worst fit)

#include <stdio.h> 
int main() 
{ 
int m; 
int n; 
int blockSize[] = {100, 200, 50, 150, 80};
 int processSize[] = {45, 75, 145, 90, 180};
 m = sizeof(blockSize) / sizeof(blockSize[0]);
 n = sizeof(processSize) / sizeof(processSize[0]);
firstFit(blockSize, m, processSize, n);
return 0;
} 
void firstFit (int blockSize[], int m, int processSize[], int n) 
{ 
 int i, j;
int allocation[n], flag[m];
 for(i = 0; i < n; i++)
 { 
 allocation[i] = -1;
 flag[i]=-1;
 } 
for(i = 0; i < m; i++)
 { 
 flag[i]=-1;
 } 
 for (i = 0; i < n; i++)
 { 
 for (j = 0; j < m; j++)
 { 
 if (blockSize[j] >= processSize[i] && flag[j]==-1) 
 { 
 allocation[i] = j;
flag[j]=1; 
break;
 } 
 else 
 continue;
 } 
 } 
 printf("\nProcess No.\tProcess Size\tBlock no.\n");
for (int i = 0; i < n; i++)
 { 
 printf(" %i\t\t", i+1);
 printf("%i\t\t", processSize[i]);
 if (allocation[i] != -1) 
 printf("%i", allocation[i] + 1);
 else 
 printf("Not Allocated");
 printf("\n");
 } 
}
